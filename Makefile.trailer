# -*- Makefile -*-

.PHONY: light-tests
light-tests:
	./scripts/before.sh test
	opam exec -- dune runtest test/cram/light
	./scripts/after.sh test

CI_TESTS_JOBS ?= 8
TEST_DIRS = test/seacoral-values test/seacoral-cbmc test/cram
.PHONY: ci-tests
ci-tests:
#	Several tests are sensitive to compute resources. To still
#	obtain fast results we first run them with the given amount of
#	jobs, but we ignore the exist status and outputs.  We rerun
#	failed tests, if any, without any parallelism to ensure that
#	was not the cause of failures.
	@echo "Running tests..."
	opam exec -- dune runtest $(TEST_DIRS) -j "${CI_TESTS_JOBS}" >/dev/null 2>&1 || \
	opam exec -- dune runtest $(TEST_DIRS) -j 1
	@echo "Tests ran successfully"

DROM_PROJECT_FLAGS ?=
.PHONY: project
project:
	opam exec -- drom project $(DROM_PROJECT_FLAGS)
#	Get rid of warnings with dune:
#       Also: drom version field to let dune-build-info get its job properly:
	sed -i dune-project \
	    -e 's/(= version)/(= :version)/g' \
	    -e '/(allow_approximate_merlin)/d' \
	    -e '/^(version .*)/d'
	sed -i Makefile \
	    -e '/\t.\/scripts\/copy-bin.sh .*/d'
	git add dune-project Makefile

# Make sure `make opam` proceeds even though there exists an `opam`
# subdirectory.
.PHONY: opam
